/* CONVERT: PX TO REM;
 * @desc : converts PX values to REM;
 */
@use "sass:math";
@use "sass:map";

@function torem($value) {
  @return #{math.div($value, 16)}rem;
}

@mixin setFontFace($fonts, $src, $type: "ttf") {
  @each $f in $fonts {
    $family: nth($f, 1);
    $font: nth($f, 2);
    $style: "normal";
    @if length($list: $f) == 3 {
      $style: nth($f, 3);
    }
    @font-face {
      font-family: "#{$family}";
      src: url("#{$src}/#{$font}.#{$type}");
      font-display: swap;
      font-style: $style;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
  }
}

@mixin setSection($max-width, $padding) {
  max-width: $max-width;
  margin: 0 auto;
  padding: $padding;
}

@mixin setMaxMedia($size) {
  @if map.has-key($breakpoints, $size) {
    @media (max-width: map.get($breakpoints, $size)) {
      @content;
    }
  } @else {
    @error "Invalid breakpoint: #{$size}. Available breakpoints: #{map.keys($breakpoints)}";
  }
}

@mixin setMinMedia($size) {
  @if map.has-key($breakpoints, $size) {
    @media (min-width: map.get($breakpoints, $size)) {
      @content;
    }
  } @else {
    @error "Invalid breakpoint: #{$size}. Available breakpoints: #{map.keys($breakpoints)}";
  }
}
